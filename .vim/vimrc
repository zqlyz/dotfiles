let mapleader= ' '
" 使用vim 模式
set nocompatible

" 设置中文帮助文档
set helplang=cn

" 设定utf-8编码 
set encoding=utf-8

" 设置修改提示
set confirm

" 显示输入命令和行列
set showcmd
set ruler

" 命令补全显示选择栏
set wildmenu

" 在搜索范围中加入子文件夹路径 
set path+=**

" 设置缩进大小
set tabstop=2
set softtabstop=2
set shiftwidth=2
" 用空格代替tab, 取消为noexpandtab
set expandtab

" 换行
set wrap

" 行列高亮
" highlight CursorLine   cterm=NONE ctermbg=black ctermfg=NONE guibg=NONE guifg=NONE
" highlight CursorColumn cterm=NONE ctermbg=black ctermfg=NONE guibg=NONE guifg=NONE
set cursorline 
"set cursorcolumn

"使用相对行号
set number
set relativenumber

" 高亮搜索
set hlsearch
exec 'nohlsearch'
set incsearch
set ignorecase
set smartcase

" keymap
noremap J 5j
noremap K 5k

map RF :source $MYVIMRC<CR>
map EC :edit $MYVIMRC<CR>
map Q :q<CR>

set splitright
set splitbelow
map sh :vsplit<CR>
map sv :split<CR>

map <LEADER>h <C-w>h
map <LEADER>j <C-w>j
map <LEADER>k <C-w>k
map <LEADER>l <C-w>l


map <LEADER><up> :res +5<CR>
map <LEADER><down> :res -5<CR>
map <LEADER><left> :vertical resize-5<CR>
map <LEADER><right> :vertical resize+5<CR>

map <LEADER>/ :nohlsearch<CR>

map to :tabe<CR>
map tj :+tabnext<CR>
map tk :-tabnext<CR>


if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif



filetype off                  " required
call plug#begin('~/.vim/plugged')

Plug 'VundleVim/Vundle.vim'

Plug 'joshdick/onedark.vim'

Plug 'jiangmiao/auto-pairs'

Plug 'vim-airline/vim-airline'

Plug 'scrooloose/nerdtree'

Plug 'Xuyuanp/nerdtree-git-plugin'

Plug 'dense-analysis/ale'

Plug 'majutsushi/tagbar'

Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()
filetype plugin indent on    " required

"==============================
" tagbar
nmap <F3> :TagbarToggle<CR>


" NERDTree 配置, 设置F3为开关按键
nnoremap <F2> :NERDTreeToggle<CR>
" 当只有NERDTree的时候自动关闭

" ALE setting
nmap <F4> :ALEToggle<CR>
nmap sp <Plug>(ale_previous_wrap)
nmap sn <Plug>(ale_next_wrap)
let g:ale_lint_on_enter = 0
let g:airline#extensions#ale#enabled = 1
let g:ale_sign_error = '>>'
let g:ale_sign_warning = '--'
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" onedark.vim override: Don't set a background color when running in a terminal;
" just use the terminal's background color
" `gui` is the hex color code used in GUI mode/nvim true-color mode
" `cterm` is the color code used in 256-color mode
" `cterm16` is the color code used in 16-color mode
if (has("autocmd") && !has("gui_running"))
  augroup colorset
    autocmd!
    let s:white = { "gui": "#ABB2BF", "cterm": "145", "cterm16" : "7" }
    autocmd ColorScheme * call onedark#set_highlight("Normal", { "fg": s:white }) " `bg` will not be styled since there is no `bg` setting
  augroup END
endif

" 语法高亮 
syntax enable
let g:airline_theme='onedark'
colorscheme onedark
